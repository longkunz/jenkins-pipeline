pipeline {
    agent {
        label 'win-slave'  // Specify a Windows node
    }

    environment {
        PRJ = ''
        IMAGE_TAG = 'vietmap.tracking.adminservice'
        VER = '1.0.0.1-${BUILD_NUMBER}'
        RELEASE_FOLDER = ''
        REGISTRY_URL = 'vmapi/quanlyxe'
        GIT_BRANCH = "${params.branch}"
        GIT_REPOSITORY = 'https://bitbucket.vietmap.vn/scm/glbs/tracking-netcore-adminservice.git'
    }

    stages {
        
        stage('Checkout') {
            steps {
                script {
                    git credentialsId: 'BITBUCKET_CREDENTIALS', url: "${GIT_REPOSITORY}", branch: "${GIT_BRANCH}"
                    echo "Pull sourcode from branch: ${params.branch} success!"
                }
            }
        }

        stage('Find Project') {
            steps {
                bat(script: 'FOR %%i IN (*.csproj) DO SET PRJ=%%~ni', label: 'Find PRJ')
                echo "Project name is: ${PRJ}"
            }
        }

        stage('Publish App') {
            steps {
                bat """
                    set $RELEASE_FOLDER=bin\\release\\$PRJ
                    rmdir -Rf $RELEASE_FOLDER
                    mkdir -p $RELEASE_FOLDER$
                    dotnet publish $PRJ.csproj -c release -o .$RELEASE_FOLDER\\app

                    del %RELEASE_FOLDER%\\Dockerfile
                    echo FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS runtime > %RELEASE_FOLDER%\\Dockerfile
                    echo WORKDIR /app >> %RELEASE_FOLDER%\\Dockerfile
                    echo COPY /app ./ >> %RELEASE_FOLDER%\\Dockerfile
                    echo ENTRYPOINT [\\"]dotnet\\",\\"%PRJ%.dll\\"] >> %RELEASE_FOLDER%\\Dockerfile
                """
            }
        }

        stage('Build Docker Image') {
            steps {
                bat """
                    docker rmi -f %IMAGE_TAG%.%VER%
                    docker build -f %RELEASE_FOLDER%\\Dockerfile -t %IMAGE_TAG%.%VER% %RELEASE_FOLDER%
                    docker tag %IMAGE_TAG%.%VER% %REGISTRY_URL%:%IMAGE_TAG%.%VER%
                    docker push %REGISTRY_URL%:%IMAGE_TAG%.%VER%
                """
            }
        }
    }
}
